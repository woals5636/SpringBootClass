[수업내용정리]
1. controller.MainController.java 추가

2. JPA 사용
	SQL문 작성 -> pstmt.execute() ~ x
	insert into ~
	[ORM] 엔티티 -> DB 연동
	Question 엔티티 클래스
		Question q1 = new Question();
		q1.setSubject("안녕하세요");
		q1.setContent("가입 인사");
		this.question[Repository].save(q1); JPA API save() 메서드
		
3. H2(내장된) 데이터베이스 설치
	- 개발용 사용
	- 자바 기반의 경량(가볍다.) DBMS
	- 빠르게 개발 -> 운영 DBMS(Oracle, MS SQL, My SQL 등등)
	- build.gradle 파일에 모듈 추가
		runtimeOnly 'com.h2database:h2'

4. 설치한 H2 데이터베이스를 사용하기 위한 설정 : application.properties
	spring.h2.console.enabled=true
	- h2 콘솔에 접속
	- 웹 UI
	
	spring.h2.console.path=/h2-console
	- h2 콘솔에 접속 경로 - 툴
	
	spring.datasource.url=jdbc:h2:~/local
	- 데이터베이스에 접속 경로 - 디비 / ~ : 사용자 경로 / local : 데이터베이스 이름
		~ 사용자의 홈 디렉토리 
			ㄴ local.mv.db 데이터베이스 파일 생성
	-- cmd - 관리자 실행
	C:\Windows\System32>cd c:\users\user
	
	c:\Users\user>copy con local.mv.db
	^Z
	        1개 파일이 복사되었습니다.
	
	c:\Users\user>
	--
	spring.datasource.driverClassName=org.h2.Driver
	- 드라이버 클래스명
	
	spring.datasource.username=sa
	- 계정
	
	spring.datasource.password=
	- 비밀번호 / 지금은 안준다.

5. JPA 환경 설정
	h2 데이터베이스 설치 + 파일 생성
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

6. 
	1) 질문(Question) 테이블
		속성 이름   			설명
		id   					질문 데이터의 고유 번호
		subject   			질문 데이터의 제목
		content   			질문 데이터의 내용
		createDate   		질문 데이터를 작성한 일시
		
		Hibernate: 
    	create table question (
        id integer generated by default as identity,
        content TEXT,
        create_date timestamp(6),
        subject varchar(200),
        primary key (id)
    	)
		
	2) 답변(Answer) 테이블
		
		id   					답변 데이터의 고유 번호
		question   			질문 데이터 (어떤 질문의 답변인지 알아야 하므로 이 속성이 필요하다.)
		content   			답변 데이터의 내용
		createDate   		답변 데이터를 작성한 일시
		
		Oracle 로 x

7. 질문 엔티티, 답변 엔티티 생성
	question 패키지
	answer 패키지
	
8. CRUD Repository(==DAO) 추가

9. JUnit 설치

	// Repository
	// CrudRepository
	// PagingAndSortPory
	// JpaRepository
		 
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	